{"version":3,"sources":["types.ts","services/lists.tsx","constants.ts","services/users.tsx","state/reducer.tsx","state/state.tsx","components/AddNewList.tsx","components/ShoppingLists.tsx","components/FieldForm.tsx","components/LoginModal/LoginForm.tsx","components/LoginModal/index.tsx","components/LogInOut.tsx","components/RegisterModal/RegisterForm.tsx","components/RegisterModal/index.tsx","components/Register.tsx","components/NavBar.tsx","components/EditListModal/DeleteListModal.tsx","components/EditListModal/InviteGuestForm.tsx","components/EditListModal/InvitedGuests.tsx","components/EditListModal/Guests.tsx","components/EditListModal/index.tsx","components/AddItemModal/AddItemForm.tsx","components/AddItemModal/index.tsx","components/EditItemModal/EditItemForm.tsx","components/EditItemModal/index.tsx","components/Item.tsx","components/ActiveList.tsx","components/AddListModal/AddListForm.tsx","components/AddListModal/index.tsx","components/ModalTest.tsx","components/ModalRoot.tsx","components/ProfilePage.tsx","App.tsx","index.tsx"],"names":["ModalType","token","config","headers","Authorization","getListsByUser","a","axios","get","listsFromApi","data","addList","name","post","addedList","editList","id","items","put","deleteList","listID","delete","addItem","item","addedItem","deleteItem","itemId","editItem","patch","inviteGuest","guestName","editedList","uninviteGuest","guestId","acceptInvitation","user","declineInvitation","leaveList","removeGuest","setToken","newToken","login","password","response","register","email","getUser","listService","setActiveList","userId","listId","clearActiveList","setLists","lists","type","payload","dispatch","userService","userFromApi","list","activeList","guests","map","g","includes","changeActiveList","itemName","newName","newItem","editedItem","resetActiveList","editedUser","guest","initialState","profilePageOpen","listModalOpen","modalType","None","StateContext","createContext","StateProvider","reducer","children","useReducer","state","Provider","value","useStateValue","useContext","AddNewList","Menu","Item","as","onClick","Icon","size","ShoppingLists","useEffect","console","error","fetchLists","length","Dropdown","text","style","minWidth","key","setActive","Divider","TextField","field","label","placeholder","autoFocus","Field","color","PasswordField","LoginForm","onSubmit","onCancel","loginFailed","initialValues","validate","values","errors","isValid","dirty","className","component","Message","negative","Grid","Column","floated","width","Button","disabled","LoginModal","open","onClose","useState","setLoginFailed","closeModal","Login","Modal","centered","closeIcon","Header","Content","LogInOut","loginModalOpen","setLoginModalOpen","loggedUserJSON","window","localStorage","getItem","JSON","parse","setUser","removeItem","discardUser","RegisterForm","registerFailed","test","RegisterModal","setRegisterFailed","Register","registerModalOpen","setRegisterModalOpen","NavBar","borderless","inverted","Container","position","header","DeleteListModal","onConfirm","InviteGuestForm","InvitedGuests","removeInvitation","log","contStyle","padding","invitedGuests","fontWeight","fontSize","Segment","verticalAlign","icon","Guests","isGuest","removeGuestUser","normalStyle","boldStyle","EditListModal","deleteModalOpen","setDeleteModalOpen","removeList","addInvitation","action","setErrors","resetForm","leaveGuestList","Actions","AddItemForm","AddItemModal","addNewItem","e","EditItemForm","EditItemModal","EditItem","onRemove","onEdit","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","ActiveList","editListModalOpen","setEditListModalOpen","setEditedItem","addItemModalOpen","setAddItemModalOpen","refContainer","useRef","focusAddButton","current","focus","onDragEnd","result","destination","source","droppableId","newItems","draggedItem","find","i","splice","paddingRight","marginBottom","droppableProps","AddListForm","l","AddListModal","addNewList","ModalTest","MODAL_COMPONENTS","TestModal","ModalRoot","SpecificModal","ProfilePage","listInvitations","setListInvitations","dividerStyle","userToReturn","getListInvitations","acceptListInvitation","horizontal","Table","definition","Body","Row","Cell","paddingBottom","inv","textAlign","positive","App","adviceStyle","marginTop","ReactDOM","render","filter","push","setItem","stringify","document","getElementById"],"mappings":"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","file":"static/js/main.46ae6c41.chunk.js","sourcesContent":["export interface ItemType extends Document {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport interface ItemList {\r\n    id: string;\r\n    name: string;\r\n    items: ItemType[];\r\n    user: User;\r\n    invitedGuests: User[];\r\n    guests: User[];\r\n}\r\n\r\nexport interface User {\r\n    id: string;\r\n    name: string;\r\n    token: string;\r\n    listInvitations: ItemList[];\r\n    activeList: ItemList;\r\n}\r\n\r\nexport enum ModalType {\r\n    None,\r\n    TestModal\r\n}","import { ItemList, ItemType } from '../types';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\n\r\nlet token: string | null = null;\r\n\r\nconst config = () => ({ headers: { Authorization: token } });\r\n\r\nconst setToken = (newToken: string) => {\r\n    token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getListsByUser = async () => {\r\n    const { data: listsFromApi } = await axios.get<ItemList[]>(\r\n        `${apiBaseUrl}/lists`, config()\r\n    );\r\n\r\n    return listsFromApi;\r\n};\r\n\r\nconst addList = async (name: string) => {\r\n    const { data: addedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists`, { name }, config()\r\n    );\r\n\r\n    return addedList;\r\n};\r\n\r\nconst editList = async (id: string, items: ItemType[]) => {\r\n    return await axios.put<ItemList>(\r\n        `${apiBaseUrl}/lists/${id}/update`, { items }, config()\r\n    );\r\n};\r\n\r\nconst deleteList = async (listID: string) => {\r\n    await axios.delete(`${apiBaseUrl}/lists/${listID}`, config());\r\n};\r\n\r\nconst addItem = async (listID: string, item: string) => {\r\n    const addedItem = await axios.post<ItemType>(\r\n        `${apiBaseUrl}/lists/${listID}/add-item`, { name: item }, config()\r\n    );\r\n    return addedItem;\r\n};\r\n\r\nconst deleteItem = async (listID: string, itemId: string) => {\r\n    await axios.delete<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/delete-item/${itemId}`, config()\r\n    );\r\n};\r\n\r\nconst editItem = async (listID: string, item: ItemType) => {\r\n    await axios.patch<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/edit-item`, { item }, config()\r\n    );\r\n};\r\n\r\nconst inviteGuest = async (listID: string, guestName: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/invite-guest`, { guestName }, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nconst uninviteGuest = async (listID: string, guestId: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/uninvite-guest`, { guestId }, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nconst acceptInvitation = async (listID: string, user: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/accept-invite`, { user }, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nconst declineInvitation = async (listID: string, user: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/decline-invite`, { user }, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nconst leaveList = async (listID: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/leave-list`, {}, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nconst removeGuest = async (listID: string, guestId: string) => {\r\n    const { data: editedList } = await axios.post<ItemList>(\r\n        `${apiBaseUrl}/lists/${listID}/remove-guest`, { guestId }, config()\r\n    );\r\n\r\n    return editedList;\r\n};\r\n\r\nexport default {\r\n    config,\r\n    setToken,\r\n    getListsByUser,\r\n    addList,\r\n    addItem,\r\n    deleteItem,\r\n    editItem,\r\n    deleteList,\r\n    editList,\r\n    inviteGuest,\r\n    uninviteGuest,\r\n    acceptInvitation,\r\n    declineInvitation,\r\n    leaveList,\r\n    removeGuest\r\n};","export const apiBaseUrl = '/api';\r\n// export const apiBaseUrl = 'http://localhost:3001/api';","import axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nimport listService from './lists';\r\n\r\nconst login = async (name: string, password: string) => {\r\n    const response = await axios.post(`${apiBaseUrl}/login`, { name, password });\r\n    return response.data;\r\n};\r\n\r\nconst register = async (name: string, email: string, password: string) => {\r\n    const response = await axios.post(`${apiBaseUrl}/users`, { name, email, password });\r\n    return response.data;\r\n};\r\n\r\nconst getUser = async (id: string) => {\r\n    const response = await axios.get(`${apiBaseUrl}/users/${id}`, listService.config());\r\n    return response.data;\r\n};\r\n\r\nconst setActiveList = async (userId: string, listId: string) => {\r\n    const response = await axios.patch(`${apiBaseUrl}/users/${userId}/set-active-list`, { listId }, listService.config());\r\n    return response.data;\r\n};\r\n\r\nconst clearActiveList = async (userId: string) => {\r\n    const response = await axios.patch(`${apiBaseUrl}/users/${userId}/clear-active-list`, {}, listService.config());\r\n    return response.data;\r\n};\r\n\r\nexport default { login, register, getUser, setActiveList, clearActiveList };","import React from 'react';\r\nimport { State } from \"./state\";\r\nimport { ItemList, ItemType, User } from \"../types\";\r\nimport listService from '../services/lists';\r\nimport userService from '../services/users';\r\n\r\nexport type Action =\r\n    | {\r\n        type: \"SET_LISTS\";\r\n        payload: ItemList[];\r\n    }\r\n    | {\r\n        type: \"SET_ACTIVE_LIST\";\r\n        payload: ItemList;\r\n    }\r\n    | {\r\n        type: \"CLEAR_ACTIVE_LIST\";\r\n    }\r\n    | {\r\n        type: \"ADD_LIST\";\r\n        payload: ItemList;\r\n    }\r\n    | {\r\n        type: \"EDIT_LIST\";\r\n        payload: ItemList;\r\n    }\r\n    | {\r\n        type: \"DELETE_LIST\";\r\n        payload: ItemList;\r\n    }\r\n    | {\r\n        type: \"OPEN_LIST_MODAL\";\r\n    }\r\n    | {\r\n        type: \"CLOSE_LIST_MODAL\";\r\n    }\r\n    | {\r\n        type: \"ADD_ITEM\";\r\n        payload: { list: ItemList; item: ItemType };\r\n    }\r\n    | {\r\n        type: \"DELETE_ITEM\";\r\n        payload: { list: ItemList; item: ItemType };\r\n    }\r\n    | {\r\n        type: \"EDIT_ITEM\";\r\n        payload: { list: ItemList; editedItem: ItemType };\r\n    }\r\n    | {\r\n        type: \"SET_USER\";\r\n        payload: { user: User };\r\n    }\r\n    | {\r\n        type: \"DISCARD_USER\";\r\n    }\r\n    | {\r\n        type: \"OPEN_PROFILE_PAGE\";\r\n    }\r\n    | {\r\n        type: \"CLOSE_PROFILE_PAGE\";\r\n    }\r\n    | {\r\n        type: \"INVITE_GUEST\";\r\n        payload: { list: ItemList };\r\n    }\r\n    | {\r\n        type: \"UNINVITE_GUEST\";\r\n        payload: { list: ItemList };\r\n    }\r\n    | {\r\n        type: \"ACCEPT_INVITATION\";\r\n        payload: { list: ItemList; user: User };\r\n    }\r\n    | {\r\n        type: \"DECLINE_INVITATION\";\r\n        payload: { list: ItemList; user: User };\r\n    }\r\n    | {\r\n        type: \"LEAVE_LIST\";\r\n        payload: { list: ItemList };\r\n    }\r\n    | {\r\n        type: \"REMOVE_GUEST\";\r\n        payload: { list: ItemList };\r\n    };\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case \"SET_LISTS\":\r\n            return {\r\n                ...state,\r\n                lists: action.payload\r\n            };\r\n        case \"SET_ACTIVE_LIST\":\r\n            return {\r\n                ...state,\r\n                activeList: action.payload\r\n            };\r\n        case \"CLEAR_ACTIVE_LIST\":\r\n            return {\r\n                ...state,\r\n                activeList: null\r\n            };\r\n        case \"OPEN_LIST_MODAL\":\r\n            return {\r\n                ...state,\r\n                listModalOpen: true\r\n            };\r\n        case \"CLOSE_LIST_MODAL\":\r\n            return {\r\n                ...state,\r\n                listModalOpen: false\r\n            };\r\n        case \"ADD_LIST\":\r\n            return {\r\n                ...state,\r\n                lists: [...state.lists, action.payload]\r\n            };\r\n        case \"EDIT_LIST\":\r\n            return {\r\n                ...state,\r\n                activeList: action.payload\r\n            };\r\n        case \"DELETE_LIST\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.filter(l => l.id !== action.payload.id),\r\n                activeList: null\r\n            };\r\n        case \"ADD_ITEM\":\r\n            action.payload.list.items.push(action.payload.item);\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l)\r\n            };\r\n        case \"DELETE_ITEM\":\r\n            action.payload.list.items = action.payload.list.items.filter(i => i.id !== action.payload.item.id);\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l)\r\n            };\r\n        case \"EDIT_ITEM\":\r\n            action.payload.list.items = action.payload.list.items.map(i => i.id === action.payload.editedItem.id ? action.payload.editedItem : i);\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l)\r\n            };\r\n        case \"SET_USER\":\r\n            window.localStorage.setItem('loggedShoppingListAppUser', JSON.stringify(action.payload.user));\r\n            listService.setToken(action.payload.user.token);\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            };\r\n        case \"DISCARD_USER\":\r\n            return {\r\n                ...state,\r\n                user: null\r\n            };\r\n        case \"OPEN_PROFILE_PAGE\":\r\n            return {\r\n                ...state,\r\n                profilePageOpen: true\r\n            };\r\n        case \"CLOSE_PROFILE_PAGE\":\r\n            return {\r\n                ...state,\r\n                profilePageOpen: false\r\n            };\r\n        case \"INVITE_GUEST\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l)\r\n            };\r\n        case \"UNINVITE_GUEST\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l)\r\n            };\r\n        case \"ACCEPT_INVITATION\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l),\r\n                user: {\r\n                    ...state.user as User,\r\n                    listInvitations: action.payload.user.listInvitations\r\n                }\r\n            };\r\n        case \"DECLINE_INVITATION\":\r\n            return {\r\n                ...state,\r\n                // lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l),\r\n                user: {\r\n                    ...state.user as User,\r\n                    listInvitations: action.payload.user.listInvitations\r\n                }\r\n            };\r\n        case \"LEAVE_LIST\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l),\r\n                // user: {\r\n                //     ...state.user as User,\r\n                //     activeList: null\r\n                // }\r\n            };\r\n        case \"REMOVE_GUEST\":\r\n            return {\r\n                ...state,\r\n                lists: state.lists.map(l => l.id === action.payload.list.id ? action.payload.list : l),\r\n                activeList: action.payload.list\r\n                // user: {\r\n                //     ...state.user as User,\r\n                //     activeList: null\r\n                // }\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLists = (lists: ItemList[]) => {\r\n    return (\r\n        {\r\n            type: \"SET_LISTS\" as \"SET_LISTS\",\r\n            payload: lists\r\n        }\r\n    );\r\n};\r\n\r\nexport const setActiveList = async (user: User, dispatch: React.Dispatch<Action>) => {\r\n    const userFromApi: User = await userService.getUser(user.id);\r\n    const list = userFromApi.activeList;\r\n\r\n    if (list) {\r\n        if (list.guests.map(g => g.id).includes(userFromApi.id) || list.user.id === userFromApi.id) {\r\n            dispatch(\r\n                {\r\n                    type: \"SET_ACTIVE_LIST\" as \"SET_ACTIVE_LIST\",\r\n                    payload: list\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const changeActiveList = async (list: ItemList, user: User, dispatch: React.Dispatch<Action>) => {\r\n    const userFromApi: User = await userService.setActiveList(user.id, list.id);\r\n    dispatch(\r\n        {\r\n            type: \"SET_ACTIVE_LIST\" as \"SET_ACTIVE_LIST\",\r\n            payload: userFromApi.activeList\r\n        }\r\n    );\r\n};\r\n\r\nexport const openListModal = () => {\r\n    return (\r\n        {\r\n            type: \"OPEN_LIST_MODAL\" as \"OPEN_LIST_MODAL\"\r\n        }\r\n    );\r\n};\r\n\r\nexport const closeListModal = () => {\r\n    return (\r\n        {\r\n            type: \"CLOSE_LIST_MODAL\" as \"CLOSE_LIST_MODAL\"\r\n        }\r\n    );\r\n};\r\n\r\nexport const addList = async (name: string, user: User, dispatch: React.Dispatch<Action>) => {\r\n    const addedList = await listService.addList(name);\r\n    const userFromApi: User = await userService.getUser(user.id);\r\n    await userService.setActiveList(userFromApi.id, addedList.id);\r\n    dispatch(\r\n        {\r\n            type: \"ADD_LIST\" as \"ADD_LIST\",\r\n            payload: addedList\r\n        }\r\n    );\r\n    dispatch({\r\n        type: \"SET_ACTIVE_LIST\" as \"SET_ACTIVE_LIST\",\r\n        payload: addedList\r\n    });\r\n};\r\n\r\nexport const editList = async (list: ItemList, items: ItemType[], dispatch: React.Dispatch<Action>) => {\r\n    await listService.editList(list.id, items);\r\n    dispatch(\r\n        {\r\n            type: \"EDIT_LIST\" as \"EDIT_LIST\",\r\n            payload: list\r\n        }\r\n    );\r\n};\r\n\r\nexport const deleteList = async (list: ItemList, dispatch: React.Dispatch<Action>) => {\r\n    await listService.deleteList(list.id);\r\n    dispatch(\r\n        {\r\n            type: \"DELETE_LIST\" as \"DELETE_LIST\",\r\n            payload: list\r\n        }\r\n    );\r\n};\r\n\r\nexport const addItem = async (list: ItemList, itemName: string, dispatch: React.Dispatch<Action>) => {\r\n    const item = (await listService.addItem(list.id, itemName)).data;\r\n    dispatch(\r\n        {\r\n            type: \"ADD_ITEM\" as \"ADD_ITEM\",\r\n            payload: { list, item }\r\n        }\r\n    );\r\n};\r\n\r\nexport const deleteItem = async (list: ItemList, item: ItemType, dispatch: React.Dispatch<Action>) => {\r\n    await listService.deleteItem(list.id, item.id);\r\n    dispatch(\r\n        {\r\n            type: \"DELETE_ITEM\" as \"DELETE_ITEM\",\r\n            payload: { list, item }\r\n        }\r\n    );\r\n};\r\n\r\nexport const editItem = async (list: ItemList, item: ItemType, newName: string, dispatch: React.Dispatch<Action>) => {\r\n    const newItem = { ...item, name: newName };\r\n    await listService.editItem(list.id, newItem);\r\n    dispatch(\r\n        {\r\n            type: \"EDIT_ITEM\" as \"EDIT_ITEM\",\r\n            payload: { list, editedItem: newItem }\r\n        }\r\n    );\r\n};\r\n\r\nexport const setUser = (dispatch: React.Dispatch<Action>) => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedShoppingListAppUser');\r\n    if (loggedUserJSON) {\r\n        const user = JSON.parse(loggedUserJSON);\r\n        dispatch(\r\n            {\r\n                type: \"SET_USER\" as \"SET_USER\",\r\n                payload: { user }\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport const discardUser = (dispatch: React.Dispatch<Action>) => {\r\n    window.localStorage.removeItem('loggedShoppingListAppUser');\r\n    listService.setToken(\"\");\r\n    dispatch(\r\n        {\r\n            type: \"DISCARD_USER\" as \"DISCARD_USER\"\r\n        }\r\n    );\r\n\r\n};\r\n\r\nexport const login = async (name: string, password: string, dispatch: React.Dispatch<Action>) => {\r\n    const user = await userService.login(name, password);\r\n    if (user) {\r\n        dispatch(\r\n            {\r\n                type: \"CLEAR_ACTIVE_LIST\" as \"CLEAR_ACTIVE_LIST\"\r\n            }\r\n        );\r\n        dispatch(\r\n            {\r\n                type: \"SET_USER\" as \"SET_USER\",\r\n                payload: { user }\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport const register = async (name: string, email: string, password: string, dispatch: React.Dispatch<Action>) => {\r\n    await userService.register(name, email, password);\r\n    const user = await userService.login(name, password);\r\n    dispatch(\r\n        {\r\n            type: \"CLEAR_ACTIVE_LIST\" as \"CLEAR_ACTIVE_LIST\"\r\n        }\r\n    );\r\n    dispatch(\r\n        {\r\n            type: \"SET_USER\" as \"SET_USER\",\r\n            payload: { user }\r\n        }\r\n    );\r\n};\r\n\r\nexport const openProfilePage = () => {\r\n    return (\r\n        {\r\n            type: \"OPEN_PROFILE_PAGE\" as \"OPEN_PROFILE_PAGE\"\r\n        }\r\n    );\r\n};\r\n\r\nexport const closeProfilePage = () => {\r\n    return (\r\n        {\r\n            type: \"CLOSE_PROFILE_PAGE\" as \"CLOSE_PROFILE_PAGE\"\r\n        }\r\n    );\r\n};\r\n\r\nexport const clearActiveList = () => {\r\n    return (\r\n        {\r\n            type: \"CLEAR_ACTIVE_LIST\" as \"CLEAR_ACTIVE_LIST\"\r\n        }\r\n    );\r\n};\r\n\r\nexport const resetActiveList = async (user: User, dispatch: React.Dispatch<Action>) => {\r\n    await userService.clearActiveList(user.id);\r\n    const lists = await listService.getListsByUser();\r\n    dispatch(\r\n        {\r\n            type: \"CLEAR_ACTIVE_LIST\" as \"CLEAR_ACTIVE_LIST\"\r\n        }\r\n    );\r\n    dispatch(\r\n        {\r\n            type: \"SET_LISTS\" as \"SET_LISTS\",\r\n            payload: lists\r\n        }\r\n    );\r\n};\r\n\r\nexport const inviteGuest = (editedList: ItemList) => {\r\n    return (\r\n        {\r\n            type: \"INVITE_GUEST\" as \"INVITE_GUEST\",\r\n            payload: { list: editedList }\r\n        }\r\n    );\r\n};\r\n\r\nexport const uninviteGuest = (editedList: ItemList) => {\r\n    return (\r\n        {\r\n            type: \"UNINVITE_GUEST\" as \"UNINVITE_GUEST\",\r\n            payload: { list: editedList }\r\n        }\r\n    );\r\n};\r\n\r\nexport const acceptInvitation = async (list: ItemList, user: User, dispatch: React.Dispatch<Action>) => {\r\n    const editedList = await listService.acceptInvitation(list.id, user.id);\r\n    const editedUser: User = await userService.getUser(user.id);\r\n    const lists: ItemList[] = await listService.getListsByUser();\r\n    dispatch(\r\n        {\r\n            type: \"ACCEPT_INVITATION\" as \"ACCEPT_INVITATION\",\r\n            payload: { list: editedList, user: editedUser }\r\n        }\r\n    );\r\n    dispatch(\r\n        {\r\n            type: \"SET_LISTS\" as \"SET_LISTS\",\r\n            payload: lists\r\n        }\r\n    );\r\n    const activeList: ItemList = await userService.setActiveList(editedUser.id, editedList.id);\r\n    dispatch(\r\n        {\r\n            type: \"SET_ACTIVE_LIST\" as \"SET_ACTIVE_LIST\",\r\n            payload: activeList\r\n        }\r\n    );\r\n};\r\n\r\nexport const declineInvitation = async (list: ItemList, user: User, dispatch: React.Dispatch<Action>) => {\r\n    const editedList = await listService.declineInvitation(list.id, user.id);\r\n    const editedUser: User = await userService.getUser(user.id);\r\n    dispatch(\r\n        {\r\n            type: \"DECLINE_INVITATION\" as \"DECLINE_INVITATION\",\r\n            payload: { list: editedList, user: editedUser }\r\n        }\r\n    );\r\n};\r\n\r\nexport const leaveList = async (list: ItemList, dispatch: React.Dispatch<Action>) => {\r\n    const editedList = await listService.leaveList(list.id);\r\n    // const editedUser: User = await userService.getUser(user.id);\r\n    dispatch(\r\n        {\r\n            type: \"LEAVE_LIST\" as \"LEAVE_LIST\",\r\n            payload: { list: editedList }\r\n        }\r\n    );\r\n};\r\n\r\nexport const removeGuest = async (list: ItemList, guest: User, dispatch: React.Dispatch<Action>) => {\r\n    const editedList = await listService.removeGuest(list.id, guest.id);\r\n    dispatch(\r\n        {\r\n            type: \"REMOVE_GUEST\" as \"REMOVE_GUEST\",\r\n            payload: { list: editedList }\r\n        }\r\n    );\r\n};","import React, { createContext, useContext, useReducer } from \"react\";\r\nimport { ItemList, User, ModalType } from \"../types\";\r\n\r\nimport { Action } from \"./reducer\";\r\n\r\nexport type State = {\r\n    lists: ItemList[];\r\n    activeList: ItemList | null;\r\n    profilePageOpen: boolean;\r\n    listModalOpen: boolean;\r\n    user: null | User;\r\n    modalType: ModalType;\r\n};\r\n\r\nconst initialState: State = {\r\n    lists: [],\r\n    activeList: null,\r\n    profilePageOpen: false,\r\n    listModalOpen: false,\r\n    user: null,\r\n    modalType: ModalType.None\r\n};\r\n\r\nexport const StateContext = createContext<[State, React.Dispatch<Action>]>([\r\n    initialState,\r\n    () => initialState\r\n]);\r\n\r\ntype StateProviderProps = {\r\n    reducer: React.Reducer<State, Action>;\r\n    children: React.ReactElement;\r\n};\r\n\r\nexport const StateProvider: React.FC<StateProviderProps> = ({\r\n    reducer,\r\n    children\r\n}: StateProviderProps) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <StateContext.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from 'react';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\nimport { useStateValue, openListModal } from '../state';\r\n\r\nconst AddNewList: React.FC = () => {\r\n    const [, dispatch] = useStateValue();\r\n    return (\r\n        <Menu.Item name='newList' as='a' onClick={() => dispatch(openListModal())}>\r\n            <Icon name='add' size='tiny' />\r\n        Add List\r\n        </Menu.Item>\r\n    );\r\n};\r\n\r\nexport default AddNewList;","import React, { useEffect } from 'react';\r\nimport AddNewList from './AddNewList';\r\nimport { useStateValue, setActiveList, setLists, changeActiveList, closeProfilePage } from '../state';\r\nimport { ItemList } from '../types';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport listService from '../services/lists';\r\n\r\nconst ShoppingLists: React.FC = () => {\r\n    const [{ lists, activeList, user, profilePageOpen }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const fetchLists = async () => {\r\n            try {\r\n                const listsFromApi = await listService.getListsByUser();\r\n                dispatch(setLists(listsFromApi));\r\n                if (user) {\r\n                    setActiveList(user, dispatch);\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        };\r\n        fetchLists();\r\n    }, [dispatch, user]);\r\n\r\n\r\n\r\n    const setActive = (list: ItemList) => {\r\n        if (user) {\r\n            changeActiveList(list, user, dispatch);\r\n            dispatch(closeProfilePage());\r\n        }\r\n    };\r\n\r\n    if (lists.length === 0) {\r\n        return <AddNewList />;\r\n    }\r\n\r\n    return (\r\n        <Dropdown item text={(activeList && !profilePageOpen) ? activeList.name : 'Select list'} style={{ minWidth: \"11rem\" }}>\r\n            <Dropdown.Menu>\r\n                {lists.map(list => (\r\n                    <Dropdown.Item key={list.id} onClick={() => setActive(list)}>{list.name}</Dropdown.Item>\r\n                ))}\r\n                <Dropdown.Divider />\r\n                <AddNewList />\r\n            </Dropdown.Menu>\r\n        </Dropdown >\r\n    );\r\n};\r\n\r\nexport default ShoppingLists;","import React from \"react\";\r\nimport { Form as UIForm } from \"semantic-ui-react\";\r\nimport { Field, ErrorMessage, FieldProps } from \"formik\";\r\n\r\ninterface TextProps extends FieldProps {\r\n    label: string;\r\n    placeholder: string;\r\n    autoFocus: boolean;\r\n}\r\n\r\nexport const TextField: React.FC<TextProps> = ({\r\n    field,\r\n    label,\r\n    placeholder,\r\n    autoFocus\r\n}) => (\r\n        <UIForm.Field>\r\n            <label>{label}</label>\r\n            <Field placeholder={placeholder} {...field} autoFocus={autoFocus} />\r\n            <div style={{ color: 'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </UIForm.Field>\r\n    );\r\n\r\nexport const PasswordField: React.FC<TextProps> = ({\r\n    field,\r\n    label,\r\n    placeholder\r\n}) => (\r\n        <UIForm.Field>\r\n            <label>{label}</label>\r\n            <Field type=\"password\" placeholder={placeholder} {...field} autoFocus={false} />\r\n            <div style={{ color: 'red' }}>\r\n                <ErrorMessage name={field.name} />\r\n            </div>\r\n        </UIForm.Field>\r\n    );\r\n","import React from \"react\";\r\nimport { Grid, Button, Message } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form } from \"formik\";\r\nimport { TextField, PasswordField } from '../FieldForm';\r\n\r\ninterface Props {\r\n    onSubmit: (values: { name: string; password: string }) => void;\r\n    onCancel: () => void;\r\n    loginFailed: boolean;\r\n}\r\n\r\nexport const LoginForm: React.FC<Props> = ({ onSubmit, onCancel, loginFailed }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: \"\",\r\n                password: \"\"\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredError = \"Field is required\";\r\n                const errors: { [field: string]: string } = {};\r\n                if (!values.name) {\r\n                    errors.name = requiredError;\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = requiredError;\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                            autoFocus={true}\r\n                        />\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={PasswordField}\r\n                        />\r\n                        {loginFailed &&\r\n                            <Message negative>\r\n                                <p>Invalid username or password.</p>\r\n                            </Message>}\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"right\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Confirm\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStateValue, login } from '../../state';\r\nimport LoginForm from './LoginForm';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst LoginModal: React.FC<Props> = ({ open, onClose }) => {\r\n    const [, dispatch] = useStateValue();\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        onClose();\r\n        setLoginFailed(false);\r\n    };\r\n\r\n    const Login = async (values: { name: string; password: string }) => {\r\n        try {\r\n            await login(values.name, values.password, dispatch);\r\n            closeModal();\r\n        } catch (error) {\r\n            setLoginFailed(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal open={open} onClose={closeModal} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Login</Modal.Header>\r\n            <Modal.Content>\r\n                <LoginForm onSubmit={Login} onCancel={closeModal} loginFailed={loginFailed} />\r\n            </Modal.Content>\r\n        </Modal >\r\n    );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useStateValue, setUser, discardUser, closeProfilePage } from '../state';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport LoginModal from './LoginModal';\r\n\r\ninterface Props {\r\n    onLogin: (values: { name: string; password: string }) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst LogInOut: React.FC = () => {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [loginModalOpen, setLoginModalOpen] = useState(false);\r\n\r\n    const Logout = () => {\r\n        discardUser(dispatch);\r\n        dispatch(closeProfilePage());\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUser(dispatch);\r\n\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Fragment>\r\n            {user ?\r\n                <Menu.Item type=\"button\" onClick={Logout} color=\"grey\">\r\n                    Logout\r\n                </Menu.Item>\r\n                :\r\n                <Menu.Item type=\"button\" onClick={() => setLoginModalOpen(true)} color=\"grey\">\r\n                    Login\r\n                </Menu.Item>\r\n            }\r\n\r\n            <LoginModal open={loginModalOpen} onClose={() => setLoginModalOpen(false)} />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LogInOut;","import React from \"react\";\r\nimport { Grid, Button, Message } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form, } from \"formik\";\r\nimport { TextField, PasswordField } from '../FieldForm';\r\n\r\ninterface Props {\r\n    onSubmit: (values: { name: string; email: string; password: string }) => void;\r\n    onCancel: () => void;\r\n    registerFailed: boolean;\r\n}\r\n\r\nexport const RegisterForm: React.FC<Props> = ({ onSubmit, onCancel, registerFailed }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredError = \"Field is required\";\r\n                const errors: { [field: string]: string } = {};\r\n                if (!values.name) {\r\n                    errors.name = requiredError;\r\n                }\r\n                if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                    errors.email = 'Invalid email address';\r\n                }\r\n                if (!values.password) {\r\n                    errors.password = requiredError;\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Username\"\r\n                            placeholder=\"Username\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                            autoFocus={true}\r\n                        />\r\n                        <Field\r\n                            label=\"Password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            component={PasswordField}\r\n                        />\r\n                        <Field\r\n                            label=\"Email\"\r\n                            placeholder=\"Optional email adress. Can be added later in account settings\"\r\n                            name=\"email\"\r\n                            component={TextField}\r\n                        />\r\n                        {registerFailed &&\r\n                            <Message negative>\r\n                                <p>Username already taken.</p>\r\n                            </Message>}\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"right\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Confirm\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStateValue, register } from '../../state';\r\nimport LoginForm from './RegisterForm';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst RegisterModal: React.FC<Props> = ({ open, onClose }) => {\r\n    const [, dispatch] = useStateValue();\r\n    const [registerFailed, setRegisterFailed] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        onClose();\r\n        setRegisterFailed(false);\r\n    };\r\n\r\n    const Register = async (values: { name: string; email: string; password: string }) => {\r\n        try {\r\n            await register(values.name, values.email, values.password, dispatch);\r\n            onClose();\r\n        } catch (error) {\r\n            setRegisterFailed(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal open={open} onClose={closeModal} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Register</Modal.Header>\r\n            <Modal.Content>\r\n                <LoginForm onSubmit={Register} onCancel={closeModal} registerFailed={registerFailed} />\r\n            </Modal.Content>\r\n        </Modal >\r\n    );\r\n};\r\n\r\nexport default RegisterModal;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { useStateValue } from '../state';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nimport RegisterModal from './RegisterModal';\r\n\r\nconst Register: React.FC = () => {\r\n    const [{ user }] = useStateValue();\r\n    const [registerModalOpen, setRegisterModalOpen] = useState(false);\r\n\r\n    return (\r\n        <Fragment>\r\n            {!user ?\r\n                <Menu.Item type=\"button\" onClick={() => setRegisterModalOpen(true)} color=\"grey\">\r\n                    Register\r\n                </Menu.Item>\r\n                :\r\n                null\r\n            }\r\n\r\n            <RegisterModal open={registerModalOpen} onClose={() => setRegisterModalOpen(false)} />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport ShoppingLists from './ShoppingLists';\r\nimport { Menu, Container, Icon } from 'semantic-ui-react';\r\nimport LogInOut from './LogInOut';\r\nimport Register from './Register';\r\nimport { useStateValue, openProfilePage } from '../state';\r\n\r\nconst NavBar: React.FC = () => {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    return (\r\n        <Menu borderless inverted size=\"massive\">\r\n            <Container>\r\n                <Menu.Item position='left' header>\r\n                    <Icon name=\"list alternate outline\" size=\"large\" />\r\n                    Shopping List\r\n                </Menu.Item>\r\n                <Menu.Menu position='right'>\r\n                    {user && <ShoppingLists />}\r\n                    {user &&\r\n                        <Menu.Item type=\"button\" onClick={() => dispatch(openProfilePage())} color=\"grey\">\r\n                            <Icon name=\"user\" size=\"large\" />\r\n                            {user.name}\r\n                        </Menu.Item>\r\n                    }\r\n                    <LogInOut />\r\n                    <Register />\r\n                </Menu.Menu>\r\n            </Container>\r\n        </Menu>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Modal, Button, Grid } from 'semantic-ui-react';\r\nimport { ItemList } from '../../types';\r\n\r\nconst DeleteListModal: React.FC<{ open: boolean; list: ItemList; onConfirm: () => void; onClose: () => void }> = ({ open, onConfirm, onClose, list }) => {\r\n\r\n    return (\r\n        <Modal open={open} onClose={onClose} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Really delete list {list.name}?</Modal.Header>\r\n            <Modal.Content>\r\n                <Grid>\r\n                    <Grid.Column floated=\"left\" width={5}>\r\n                        <Button type=\"button\" onClick={onConfirm} color=\"red\">\r\n                            Yes\r\n                    </Button>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated=\"right\" width={5}>\r\n                        <Button floated=\"right\" type=\"button\" onClick={onClose} color=\"grey\">\r\n                            No\r\n                    </Button>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DeleteListModal;","import React from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form, } from \"formik\";\r\nimport { TextField } from '../FieldForm';\r\n\r\ninterface Props {\r\n    onSubmit: any;\r\n}\r\n\r\nexport const InviteGuestForm: React.FC<Props> = ({ onSubmit }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: \"\",\r\n            }}\r\n            onSubmit={onSubmit}\r\n        // validate={values => {\r\n        //     const requiredError = \"Field is required\";\r\n        //     const errors: { [field: string]: string } = {};\r\n        //     if (!values.name) {\r\n        //         errors.name = requiredError;\r\n        //     }\r\n        //     return errors;\r\n        // }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Invite a user\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                        />\r\n                        <Grid>\r\n                            {/* <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column> */}\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"left\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Invite\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default InviteGuestForm;","import React, { Fragment } from 'react';\r\nimport { ItemList } from '../../types';\r\nimport { Button, Segment, Grid } from \"semantic-ui-react\";\r\nimport { User } from '../../types';\r\nimport listService from '../../services/lists';\r\nimport { uninviteGuest, changeActiveList, useStateValue } from '../../state';\r\n\r\nconst InvitedGuests: React.FC<{ list: ItemList }> = ({ list }) => {\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const removeInvitation = async (guest: User) => {\r\n        try {\r\n            const editedList = await listService.uninviteGuest(list.id, guest.id);\r\n            dispatch(uninviteGuest(editedList));\r\n            if (user) {\r\n                changeActiveList(editedList, user, dispatch);\r\n            }\r\n        } catch (error) {\r\n            // action.setErrors({ name: \"User does not exist.\" });\r\n            console.log(error);\r\n        }\r\n    };\r\n    if (!list) {\r\n        return null;\r\n    }\r\n\r\n    const contStyle = {\r\n        padding: \"7px 7px 7px 14px\",\r\n    };\r\n\r\n    const normalStyle = {\r\n        fontSize: \"1rem\"\r\n    };\r\n\r\n    if (list.invitedGuests.length === 0) {\r\n        return (\r\n            <Fragment>\r\n                <label style={{ fontWeight: 'bold' }}>Invitations</label>\r\n                <p style={normalStyle}>List has no pending invitations.</p>\r\n            </Fragment >\r\n\r\n        );\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <label style={{ fontWeight: 'bold' }}>Invitations</label>\r\n            {list.invitedGuests.map(g =>\r\n\r\n                <Segment key={g.id}>\r\n                    <Grid>\r\n                        <Grid.Column style={contStyle} floated=\"left\" verticalAlign=\"middle\" width={5}>\r\n                            <span>{g.name}</span>\r\n                        </Grid.Column>\r\n                        <Grid.Column style={contStyle} floated=\"right\" width={5}>\r\n                            <Button floated=\"right\" size=\"mini\" color=\"red\" onClick={() => removeInvitation(g)} icon=\"delete\" />\r\n                        </Grid.Column>\r\n\r\n                    </Grid>\r\n\r\n                </Segment>\r\n            )\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default InvitedGuests;","import React, { Fragment } from 'react';\r\nimport { ItemList } from '../../types';\r\nimport { Button, Segment, Grid } from \"semantic-ui-react\";\r\nimport { User } from '../../types';\r\nimport { removeGuest, useStateValue } from '../../state';\r\n\r\nconst Guests: React.FC<{ list: ItemList; isGuest: boolean }> = ({ list, isGuest }) => {\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const removeGuestUser = async (guest: User) => {\r\n        try {\r\n            removeGuest(list, guest, dispatch);\r\n        } catch (error) {\r\n            // action.setErrors({ name: \"User does not exist.\" });\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    if (!list) {\r\n        return null;\r\n    }\r\n\r\n    const contStyle = {\r\n        padding: \"7px 7px 7px 14px\",\r\n    };\r\n\r\n    const normalStyle = {\r\n        fontSize: \"1rem\"\r\n    };\r\n    const boldStyle = {\r\n        fontSize: \"1rem\",\r\n        fontWeight: \"bold\"\r\n    };\r\n\r\n    if (!user) {\r\n        return null;\r\n    }\r\n\r\n    if (list.guests.length === 0) {\r\n        return (\r\n            <Fragment>\r\n                <label style={{ fontWeight: 'bold' }}>Guests</label>\r\n                <p style={normalStyle}>List has no guest users.</p>\r\n            </Fragment >\r\n\r\n        );\r\n    }\r\n\r\n    // user is guest on the said list\r\n    if (isGuest) {\r\n        return (\r\n            <Fragment>\r\n                <label style={{ fontWeight: 'bold' }}>Guests</label>\r\n                {list.guests.map(g =>\r\n                    <Segment size=\"mini\" key={g.id}>\r\n                        <span style={g.id === user.id ? boldStyle : normalStyle}>{g.name}</span>\r\n                    </Segment>\r\n                )\r\n                }\r\n            </Fragment >\r\n\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <label style={{ fontWeight: 'bold' }}>Guests</label>\r\n            {list.guests.map(g =>\r\n\r\n                <Segment key={g.id}>\r\n                    <Grid>\r\n                        <Grid.Column style={contStyle} floated=\"left\" verticalAlign=\"middle\" width={5}>\r\n                            <span>{g.name}</span>\r\n                        </Grid.Column>\r\n                        <Grid.Column style={contStyle} floated=\"right\" width={5}>\r\n                            <Button floated=\"right\" size=\"mini\" color=\"red\" onClick={() => removeGuestUser(g)} icon=\"delete\" />\r\n                        </Grid.Column>\r\n\r\n                    </Grid>\r\n\r\n                </Segment>\r\n            )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Guests;","import React, { useState, Fragment } from 'react';\r\nimport { Modal, Button, Icon, Divider, Segment } from 'semantic-ui-react';\r\nimport { useStateValue, deleteList, inviteGuest, changeActiveList, leaveList, resetActiveList } from '../../state';\r\nimport { ItemList } from '../../types';\r\nimport DeleteListModal from './DeleteListModal';\r\nimport InviteGuestForm from './InviteGuestForm';\r\nimport InvitedGuests from './InvitedGuests';\r\nimport Guests from './Guests';\r\nimport listService from '../../services/lists';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    list: ItemList;\r\n}\r\n\r\nconst EditListModal: React.FC<Props> = ({ open, onClose, list }) => {\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState<boolean>(false);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    const removeList = async () => {\r\n        setDeleteModalOpen(false);\r\n        onClose();\r\n        try {\r\n            deleteList(list, dispatch);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const addInvitation = async (values: { name: string }, action: any) => {\r\n        if (list.guests.map(g => g.name).includes(values.name) ||\r\n            list.invitedGuests.map(g => g.name).includes(values.name)) {\r\n            return action.setErrors({ name: \"User is already invited to the list.\" });\r\n        }\r\n        try {\r\n            const editedList = await listService.inviteGuest(list.id, values.name);\r\n            dispatch(inviteGuest(editedList));\r\n            if (user) {\r\n                changeActiveList(editedList, user, dispatch);\r\n            }\r\n            action.resetForm();\r\n        } catch (error) {\r\n            action.setErrors({ name: \"User does not exist.\" });\r\n        }\r\n    };\r\n    const leaveGuestList = async () => {\r\n        try {\r\n\r\n            if (user) {\r\n                leaveList(list, dispatch);\r\n                resetActiveList(user, dispatch);\r\n                onClose();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const usersModal = () => {\r\n        return (\r\n            <Fragment>\r\n                <label style={{ fontWeight: \"bold\" }}>Owner of the list</label>\r\n                <Segment size=\"mini\">\r\n                    <span style={{ fontSize: \"1rem\", fontWeight: \"bold\" }}>{list.user.name}</span>\r\n                </Segment>\r\n                <Divider />\r\n                <Guests list={list} isGuest={false} />\r\n                <Divider />\r\n                <InvitedGuests list={list} />\r\n                <Divider />\r\n                <InviteGuestForm onSubmit={addInvitation} />\r\n                <Divider />\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    const guestsModal = () => {\r\n        return (\r\n            <Fragment>\r\n                <label style={{ fontWeight: 'bold' }}>Owner of the list</label>\r\n                <Segment size=\"mini\">\r\n                    <span style={{ fontSize: \"1rem\" }}>{list.user.name}</span>\r\n                </Segment>\r\n                <Divider />\r\n                <Guests list={list} isGuest={true} />\r\n                <Divider />\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    if (user) {\r\n        if (list.guests.map(g => g.id).includes(user.id)) {\r\n            return (\r\n                <Modal open={open} onClose={onClose} centered={false} size=\"small\" closeIcon>\r\n                    <Modal.Header>Configure list {list.name}</Modal.Header>\r\n                    <Modal.Content>\r\n                        {guestsModal()}\r\n                        <Button color=\"orange\" onClick={leaveGuestList}>\r\n                            <Icon name='delete' />Leave list\r\n                        </Button>\r\n                        <DeleteListModal open={deleteModalOpen} list={list} onConfirm={removeList} onClose={() => setDeleteModalOpen(false)} />\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button type=\"button\" onClick={onClose} color=\"grey\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            );\r\n        } else if (list.user.id === user.id) {\r\n            return (\r\n                <Modal open={open} onClose={onClose} centered={false} size=\"small\" closeIcon>\r\n                    <Modal.Header>Configure list {list.name}</Modal.Header>\r\n                    <Modal.Content>\r\n                        {usersModal()}\r\n                        <Button color=\"red\" onClick={() => setDeleteModalOpen(true)}>\r\n                            <Icon name='delete' />Delete list\r\n                        </Button>\r\n                        <DeleteListModal open={deleteModalOpen} list={list} onConfirm={removeList} onClose={() => setDeleteModalOpen(false)} />\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button type=\"button\" onClick={onClose} color=\"grey\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            );\r\n        }\r\n    }\r\n\r\n    console.log(user);\r\n    console.log(list);\r\n\r\n    return (\r\n        <Modal open={open} onClose={onClose} centered={false} size=\"small\" closeIcon>\r\n            <Modal.Header>Login to edit the list</Modal.Header>\r\n            <Modal.Actions>\r\n                <Button type=\"button\" onClick={onClose} color=\"grey\">\r\n                    Cancel\r\n            </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default EditListModal;\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form, } from \"formik\";\r\nimport { TextField } from '../FieldForm';\r\n\r\ninterface Props {\r\n    onSubmit: (values: { name: string }) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport const AddItemForm: React.FC<Props> = ({ onSubmit, onCancel }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: \"\",\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredError = \"Field is required\";\r\n                const errors: { [field: string]: string } = {};\r\n                if (!values.name) {\r\n                    errors.name = requiredError;\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Name of the item\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                            autoFocus={true}\r\n                        />\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"right\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddItemForm;\r\n","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStateValue, addItem } from '../../state';\r\nimport { ItemList } from '../../types';\r\nimport AddItemForm from './AddItemForm';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    list: ItemList;\r\n}\r\n\r\nconst AddItemModal: React.FC<Props> = ({ open, onClose, list }) => {\r\n    const [, dispatch] = useStateValue();\r\n    const addNewItem = async (values: { name: string }) => {\r\n        try {\r\n            addItem(list, values.name, dispatch);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal open={open} onClose={onClose} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Add item</Modal.Header>\r\n            <Modal.Content>\r\n                <AddItemForm onSubmit={addNewItem} onCancel={onClose} />\r\n            </Modal.Content>\r\n        </Modal >\r\n    );\r\n};\r\n\r\nexport default AddItemModal;\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form, } from \"formik\";\r\nimport { TextField } from '../FieldForm';\r\nimport { ItemType } from '../../types';\r\n\r\ninterface Props {\r\n    onSubmit: (values: { name: string }) => void;\r\n    onCancel: () => void;\r\n    item: ItemType | null;\r\n}\r\n\r\nexport const EditItemForm: React.FC<Props> = ({ onSubmit, onCancel, item }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: item ? item.name : \"\"\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredError = \"Field is required\";\r\n                const errors: { [field: string]: string } = {};\r\n                if (!values.name) {\r\n                    errors.name = requiredError;\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Name of the item\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                        />\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"right\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Confirm\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default EditItemForm;\r\n","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStateValue, editItem } from '../../state';\r\nimport { ItemList, ItemType } from '../../types';\r\nimport EditItemForm from './EditItemForm';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    item: ItemType | null;\r\n    list: ItemList;\r\n}\r\n\r\nconst EditItemModal: React.FC<Props> = ({ open, onClose, item, list }) => {\r\n    const [, dispatch] = useStateValue();\r\n    const EditItem = async (values: { name: string }) => {\r\n        try {\r\n            if (item) {\r\n                editItem(list, item, values.name, dispatch);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Modal open={open} onClose={onClose} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Edit item</Modal.Header>\r\n            <Modal.Content>\r\n                <EditItemForm onSubmit={EditItem} onCancel={onClose} item={item} />\r\n            </Modal.Content>\r\n        </Modal >\r\n    );\r\n};\r\n\r\nexport default EditItemModal;\r\n","import React from 'react';\r\nimport { Button, Icon, Segment, Grid } from 'semantic-ui-react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { ItemType } from '../types';\r\n\r\ninterface Props {\r\n    item: ItemType;\r\n    onRemove: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    onEdit: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    index: number;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ item, onRemove, onEdit, index }) => {\r\n    return (\r\n        <Draggable draggableId={item.id} index={index} >\r\n            {(provided) => (\r\n                <div\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}>\r\n                    <Segment>\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" verticalAlign=\"middle\" width={5}>\r\n                                <span>{item.name}</span>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button floated=\"right\" size=\"tiny\" color=\"red\" onClick={onRemove} icon>\r\n                                    <Icon name=\"delete\" />\r\n                                </Button>\r\n                                <Button floated=\"right\" size=\"tiny\" color=\"olive\" onClick={onEdit} icon>\r\n                                    <Icon name=\"edit\" />\r\n                                </Button>\r\n                            </Grid.Column>\r\n\r\n                        </Grid>\r\n\r\n                    </Segment>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Item;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useStateValue, deleteItem, editList } from '../state';\r\nimport { Container, Header, Divider, Button, Icon } from 'semantic-ui-react';\r\nimport EditListModal from './EditListModal';\r\nimport AddItemModal from './AddItemModal';\r\nimport EditItemModal from './EditItemModal';\r\nimport Item from './Item';\r\nimport { ItemType } from '../types';\r\n\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\r\n\r\nconst ActiveList: React.FC = () => {\r\n    const [editListModalOpen, setEditListModalOpen] = useState<boolean>(false);\r\n    const [editedItem, setEditedItem] = useState<ItemType | null>(null);\r\n    const [addItemModalOpen, setAddItemModalOpen] = useState<boolean>(false);\r\n    const [{ activeList }, dispatch] = useStateValue();\r\n    const refContainer = useRef<Button>(null);\r\n\r\n    const focusAddButton = () => {\r\n        if (refContainer && refContainer.current) {\r\n            refContainer.current.focus();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        focusAddButton();\r\n    }, [activeList]);\r\n\r\n    const removeItem = async (item: ItemType) => {\r\n        if (activeList) {\r\n            try {\r\n                deleteItem(activeList, item, dispatch);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onDragEnd = async (result: DropResult) => {\r\n        const { destination, source, draggableId } = result;\r\n\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return;\r\n        }\r\n\r\n        const items = activeList?.items;\r\n        if (items && activeList) {\r\n            const newItems = [...items];\r\n            const draggedItem = newItems.find(i => i.id === draggableId);\r\n            if (draggedItem) {\r\n                newItems.splice(source.index, 1);\r\n                newItems.splice(destination.index, 0, draggedItem);\r\n                activeList.items = newItems;\r\n            }\r\n\r\n            try {\r\n                editList(activeList, newItems, dispatch);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const contStyle = { padding: \"0 4.6rem\" };\r\n\r\n    if (!activeList || !activeList.items) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Container style={contStyle}>\r\n            {<Header as=\"h3\" style={{ paddingRight: \"1rem\", marginBottom: 0 }}>{activeList.name}</Header>}\r\n            <Divider />\r\n            {activeList.items.length === 0 ? 'List has no items' :\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <Droppable droppableId={activeList.id}>\r\n                        {(provided) => (\r\n                            <div\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}>\r\n                                {activeList.items.map((item, index) => (\r\n                                    <Item\r\n                                        index={index}\r\n                                        key={item.id}\r\n                                        item={item}\r\n                                        onRemove={() => removeItem(item)}\r\n                                        onEdit={() => setEditedItem(item)}\r\n                                    />))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>}\r\n            <EditListModal open={editListModalOpen} onClose={() => setEditListModalOpen(false)} list={activeList} />\r\n            <AddItemModal open={addItemModalOpen} onClose={() => { setAddItemModalOpen(false); focusAddButton(); }} list={activeList} />\r\n            <EditItemModal open={editedItem ? true : false} onClose={() => setEditedItem(null)} list={activeList} item={editedItem} />\r\n            <Divider />\r\n            <Button floated=\"left\" color='olive' onClick={() => setEditListModalOpen(true)}>\r\n                <Icon name='edit' />Edit\r\n            </Button>\r\n            <Button color=\"green\" floated=\"right\" onClick={() => setAddItemModalOpen(true)} ref={refContainer}>\r\n                <Icon name=\"add\" />Add Item\r\n            </Button>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nexport default ActiveList;","import React from \"react\";\r\nimport { Grid, Button } from \"semantic-ui-react\";\r\nimport { Field, Formik, Form } from \"formik\";\r\nimport { TextField } from '../FieldForm';\r\nimport { useStateValue } from '../../state';\r\n\r\ninterface Props {\r\n    onSubmit: (values: { name: string }) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nexport const AddListForm: React.FC<Props> = ({ onSubmit, onCancel }) => {\r\n    const [{ lists }] = useStateValue();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: \"\",\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validate={values => {\r\n                const requiredError = \"Field is required\";\r\n                const uniqueViolationError = 'List with that name already exists';\r\n                const errors: { [field: string]: string } = {};\r\n                if (!values.name) {\r\n                    errors.name = requiredError;\r\n                }\r\n                if (lists.map(l => l.name).includes(values.name)) {\r\n                    errors.name = uniqueViolationError;\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({ isValid, dirty }) => {\r\n                return (\r\n                    <Form className=\"form ui\">\r\n                        <Field\r\n                            label=\"Name of the list\"\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            component={TextField}\r\n                            autoFocus={true}\r\n                        />\r\n                        <Grid>\r\n                            <Grid.Column floated=\"left\" width={5}>\r\n                                <Button type=\"button\" onClick={onCancel} color=\"red\">\r\n                                    Cancel\r\n                                </Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column floated=\"right\" width={5}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    floated=\"right\"\r\n                                    color=\"green\"\r\n                                    disabled={!dirty || !isValid}\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddListForm;\r\n","import React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport AddListForm from './AddListForm';\r\nimport { useStateValue, closeListModal, addList } from '../../state';\r\n\r\nconst AddListModal: React.FC = () => {\r\n    const [{ listModalOpen, user }, dispatch] = useStateValue();\r\n\r\n    const addNewList = async (values: { name: string }) => {\r\n        dispatch(closeListModal());\r\n        try {\r\n            if (user) {\r\n                addList(values.name, user, dispatch);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal open={listModalOpen} onClose={() => dispatch(closeListModal())} centered={false} size=\"tiny\" closeIcon>\r\n            <Modal.Header>Add a new list</Modal.Header>\r\n            <Modal.Content>\r\n                <AddListForm onSubmit={addNewList} onCancel={() => dispatch(closeListModal())} />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddListModal;\r\n","import React from 'react';\r\n\r\nconst ModalTest: React.FC = () => {\r\n    return (\r\n        <h1>Modal Test</h1>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default ModalTest;","import React from 'react';\r\nimport { useStateValue } from '../state';\r\nimport ModalTest from './ModalTest';\r\nimport { ModalType } from '../types';\r\n\r\nconst MODAL_COMPONENTS = {\r\n    [ModalType.TestModal]: ModalTest,\r\n};\r\n\r\nconst ModalRoot: React.FC = () => {\r\n    const [{ modalType }] = useStateValue();\r\n\r\n    if (modalType === ModalType.None) {\r\n        return null;\r\n    }\r\n\r\n    const SpecificModal = MODAL_COMPONENTS[modalType];\r\n    return <SpecificModal />;\r\n    // return <SpecificModal {...modalProps} />;\r\n};\r\n\r\n\r\n\r\nexport default ModalRoot;","import React, { useEffect, useState } from 'react';\r\nimport { useStateValue, clearActiveList, acceptInvitation, declineInvitation, closeProfilePage } from '../state';\r\nimport { Container, Header, Icon, Divider, Table, Button } from 'semantic-ui-react';\r\nimport { ItemList, User } from '../types';\r\nimport userService from '../services/users';\r\n\r\nconst ProfilePage: React.FC = () => {\r\n    const [{ user, profilePageOpen }, dispatch] = useStateValue();\r\n    const [listInvitations, setListInvitations] = useState<ItemList[]>();\r\n\r\n    const contStyle = { padding: \"0 4.6rem\" };\r\n    const dividerStyle = { padding: \"1rem 0 1rem 0\" };\r\n\r\n    useEffect(() => {\r\n        if (profilePageOpen) {\r\n            dispatch(clearActiveList());\r\n        }\r\n    }, [dispatch, profilePageOpen]);\r\n\r\n    useEffect(() => {\r\n        const getListInvitations = async () => {\r\n            if (user) {\r\n                const userToReturn: User = await userService.getUser(user.id);\r\n                setListInvitations(userToReturn.listInvitations);\r\n            }\r\n        };\r\n        getListInvitations();\r\n    }, [user]);\r\n\r\n    const acceptListInvitation = async (list: ItemList) => {\r\n        if (user) {\r\n            await acceptInvitation(list, user, dispatch);\r\n            dispatch(closeProfilePage());\r\n        }\r\n    };\r\n\r\n    const declineListInvitation = (list: ItemList) => {\r\n        if (user) {\r\n            declineInvitation(list, user, dispatch);\r\n        }\r\n    };\r\n\r\n    if (!user) {\r\n        return null;\r\n    }\r\n\r\n    const listInvTable = () => {\r\n        return (\r\n            <Table>\r\n                <Table.Body>\r\n                    {listInvitations && listInvitations.map((inv) =>\r\n                        <Table.Row key={inv.id}>\r\n                            <Table.Cell>{inv.name} by {inv.user.name}</Table.Cell>\r\n                            <Table.Cell textAlign='right'>\r\n                                <Button positive size=\"mini\" onClick={() => acceptListInvitation(inv)}>\r\n                                    <Icon name='check' />Accept\r\n                            </Button>\r\n                                <Button negative size=\"mini\" onClick={() => declineListInvitation(inv)}>\r\n                                    <Icon name='delete' />Decline\r\n                            </Button>\r\n                            </Table.Cell>\r\n                        </Table.Row>)}\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container style={contStyle}>\r\n            <Divider style={dividerStyle} horizontal>\r\n                <Header as='h4'>\r\n                    Account information\r\n                </Header>\r\n            </Divider>\r\n            <Table definition>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell width={2}>Username</Table.Cell>\r\n                        <Table.Cell>{user.name}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n            <Divider style={dividerStyle} horizontal>\r\n                <Header as='h4'>\r\n                    List Invitations\r\n                </Header>\r\n            </Divider>\r\n            {listInvitations &&\r\n                (listInvitations.length === 0\r\n                    ?\r\n                    <p style={{ paddingBottom: \"1.3rem\" }}>No new invitations.</p>\r\n                    :\r\n                    listInvTable())}\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\nimport NavBar from './components/NavBar';\nimport ActiveList from './components/ActiveList';\nimport AddListModal from './components/AddListModal';\nimport { useStateValue } from './state';\nimport { Container, Header } from 'semantic-ui-react';\nimport ModalRoot from './components/ModalRoot';\nimport ProfilePage from './components/ProfilePage';\n\nconst App: React.FC = () => {\n    const [{ user, profilePageOpen }] = useStateValue();\n\n    const contStyle = { padding: \"0 4.6rem\" };\n\n\n    const adviceStyle =\n    {\n        marginTop: \"4rem\",\n        textAlign: \"center\"\n    };\n\n    const pageToRender = () => {\n        if (user) {\n            if (profilePageOpen) {\n                return <ProfilePage />;\n            } else {\n                return <ActiveList />;\n            }\n\n        }\n        return (\n            <Container style={contStyle}>\n                <Header as=\"h2\" style={adviceStyle}>Please login to use the site.</Header>\n            </Container>\n        );\n    };\n\n    return (\n        <div>\n            <NavBar />\n            <Container>\n                {pageToRender()}\n                <AddListModal />\n                <ModalRoot />\n            </Container>\n        </div >\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { reducer, StateProvider } from './state';\n\nReactDOM.render(\n  <StateProvider reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}